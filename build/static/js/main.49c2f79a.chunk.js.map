{"version":3,"sources":["assets/covid19_logo.png","assets/corona_logo.png","logo.svg","core/Header.js","actions/countries.js","components/CountryTracker.js","components/GlobalTracker.js","App.js","serviceWorker.js","reducers/index.js","reducers/countries.js","index.js"],"names":["module","exports","Header","className","to","src","corona_logo","alt","style","width","saveCountries","data","type","payload","CountryTracker","dispatch","useDispatch","useState","countries","setCountries","loading","setLoader","country","setCountry","flag","setFlag","token","setToken","setStates","countryTimeline","setCountryTimeline","getToken","countryName","a","console","log","options","axios","get","headers","then","res","auth_token","getStates","catch","error","authToken","useEffect","Fragment","value","onChange","e","persist","target","filter","elem","alpha2Code","timelineitems","keys","Object","lastItemKey","length","name","handleChange","map","element","key","end","total_cases","duration","separator","total_recoveries","total_deaths","new_daily_cases","padding","height","GlobalTracker","React","useMemo","label","showPoints","primary","position","allCountries","useSelector","state","totalCases","setTotalCases","totalRecovered","setTotalRecovered","totalDeaths","setTotalDeaths","totalNewCasesToday","setTotalNewCasesToday","totalActiveCases","setTotalActiveCases","newDeathsToday","setNewDeathsToday","topCases","setTopCases","results","total_recovered","total_new_cases_today","total_active_cases","total_new_deaths_today","array","Countries","countryCode","CountryCode","TotalConfirmed","Country","sort","b","splice","reverse","textAlign","background","color","index","item","fontWeight","App","display","justifyContent","alignItems","paddingTop","covid19_logo","exact","path","component","Boolean","window","location","hostname","match","allReducers","combineReducers","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.49c2f79a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/covid19_logo.6ce9074d.png\";","module.exports = __webpack_public_path__ + \"static/media/corona_logo.e0f3ae47.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport corona_logo from '../assets/corona_logo.png';\r\n\r\nexport default function Header() {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"container header-container\">\r\n                <Link to=\"/\">\r\n                    <div className=\"header-logo\">\r\n                        <img src={corona_logo} alt=\"COVID 19\" style={{ width: '50px' }} />\r\n                        <div>CORONA TRACKER</div>\r\n                    </div></Link>\r\n                <div className=\"header-country\">\r\n                    <Link to=\"/countrytracker\"><button className=\"waves-effect waves-light btn-large\">Country wise Tracker</button></Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const saveCountries = (data) => {\r\n    return {\r\n        type: 'SET_COUNTRIES',\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport { useEffect, useState } from 'react';\r\nimport CountUp from 'react-countup';\r\nimport {useDispatch} from 'react-redux'\r\nimport {saveCountries} from '../actions/countries';\r\n\r\nimport axios from 'axios';\r\n\r\nexport default function CountryTracker() {\r\n    const dispatch = useDispatch();\r\n    const [countries, setCountries] = useState([]);\r\n    const [loading, setLoader] = useState(false);\r\n    const [country, setCountry] = useState(\"\");\r\n    const [flag, setFlag] = useState(\"\");\r\n    const [token, setToken] = useState(\"\");\r\n    const [states, setStates] = useState([])\r\n    const [countryTimeline, setCountryTimeline] = useState(null);\r\n    const getToken = async (countryName) => {\r\n        console.log('jkqnlescndj')\r\n        const options = {\r\n            \"Accept\": \"application/json\",\r\n            \"api-token\": \"KXk8jBkyE5oPiyCrCMQUt5waoC5IuOXtBnHrumiakW7fJB_VN1incl8KT7VyEf7noXs\",\r\n            \"user-email\": \"rolemo5834@2go-mail.com\"\r\n        }\r\n        await axios.get('https://www.universal-tutorial.com/api/getaccesstoken', { headers: options })\r\n            .then(async (res) => {\r\n                await setToken(res.data.auth_token);\r\n                getStates(countryName, res.data.auth_token)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n    const getStates = async (countryName, authToken) => {\r\n        if (countryName) {\r\n            await getToken();\r\n            console.log('token', token)\r\n            const options = {\r\n                'Authorization': 'Bearer ' + authToken,\r\n                'Accept': 'application/json'\r\n            }\r\n            await axios.get('https://www.universal-tutorial.com/api/states/' + countryName, { headers: options })\r\n                .then(res => {\r\n                    setStates(res.data);\r\n                    console.log('states', res)\r\n                })\r\n        } else {\r\n            setStates([])\r\n        }\r\n    }\r\n    const handleStateChange = (e) => {\r\n        console.log('state', e.target.value)\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        e.persist();\r\n        if (e && e.target.value) {\r\n            setCountry(e.target.value);\r\n            setFlag(countries.filter(elem => elem.alpha2Code == e.target.value)[0] ?\r\n                countries.filter(elem => elem.alpha2Code == e.target.value)[0].flag :\r\n                null);\r\n            setLoader(true)\r\n            axios.get('https://api.thevirustracker.com/free-api?countryTimeline=' + e.target.value)\r\n                .then((data) => {\r\n                    setLoader(false)\r\n                    if (data && data.data && data.data.timelineitems) {\r\n                        const keys = Object.keys(data.data.timelineitems[0]);\r\n                        const lastItemKey = keys[keys.length - 2]\r\n                        setCountryTimeline(data.data.timelineitems[0][lastItemKey]);\r\n                        // getToken();\r\n                        getToken(countries.filter(elem => elem.alpha2Code === e.target.value)[0] ?\r\n                            countries.filter(elem => elem.alpha2Code === e.target.value)[0].name :\r\n                            null);\r\n                    } else {\r\n                        setCountryTimeline(null);\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoader(true);\r\n        axios.get('https://restcountries.eu/rest/v2/all')\r\n            .then((data) => {\r\n                dispatch(saveCountries(data.data))\r\n                console.log(data)\r\n                setCountries(data.data)\r\n                \r\n                setLoader(false);\r\n            })\r\n            .catch(error => console.log(error));\r\n    }, [])\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"container\">\r\n                <h3>Country</h3>\r\n                {\r\n                    loading &&\r\n                    <div className=\"progress\">\r\n                        <div className=\"indeterminate\"></div>\r\n                    </div>\r\n                }\r\n                {\r\n                    <div>\r\n                        <section className=\"section\">\r\n                            <div className=\"col-6\">\r\n                                <div className=\"input-field\">\r\n                                    <select value={country} onChange={(e) => handleChange(e)}>\r\n                                        <option value=\"\">Choose a Country</option>\r\n                                        {countries.map(element => {\r\n                                            return (\r\n                                                <option value={element.alpha2Code}\r\n                                                    key={element.alpha2Code}\r\n                                                >{element.name}</option>\r\n                                            )\r\n                                        })};\r\n                        </select>\r\n                                    {!loading && countryTimeline &&\r\n                                        <section className=\"section\">\r\n                                            <div className=\"col-12\">\r\n                                                <section className=\"section\">\r\n                                                    <div className=\"col-4\">\r\n                                                        <div className=\"card-panel\">\r\n                                                            <div className=\"card-header\">Total Cases</div>\r\n                                                            <div className=\"cases\">\r\n                                                                <CountUp end={countryTimeline.total_cases} duration={1} separator=\",\" />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-4\">\r\n                                                        <div className=\"card-panel\">\r\n                                                            <div className=\"card-header\">Total Recovered</div>\r\n                                                            <div className=\"cases\">\r\n                                                                <CountUp end={countryTimeline.total_recoveries} duration={1} separator=\",\" />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-4\">\r\n                                                        <div className=\"card-panel\">\r\n                                                            <div className=\"card-header\">Total Deaths</div>\r\n                                                            <div className=\"cases\">\r\n                                                                <CountUp end={countryTimeline.total_deaths} duration={1} separator=\",\" />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-4\">\r\n                                                        <div className=\"card-panel\">\r\n                                                            <div className=\"card-header\">Total Cases Today</div>\r\n                                                            <div className=\"cases\">\r\n                                                                <CountUp end={countryTimeline.new_daily_cases} duration={1} separator=\",\" />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </section>\r\n                                            </div>\r\n                                        </section>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-6\" style={{ padding: '0 15px' }}>\r\n                                <div className=\"countryImage\">\r\n                                    {flag &&\r\n                                        <img src={flag} alt=\"flag\" style={{ height: '100%', width: '100%' }} />\r\n                                    }\r\n                                    {countries && countries.length > 0 &&\r\n                                        <div className=\"opaque-div\">\r\n                                            <div className=\"opaque-text\">\r\n                                                {countries.filter(elem => elem.alpha2Code === country)\r\n                                                    && countries.filter(elem => elem.alpha2Code === country).length\r\n                                                    ? countries.filter(elem => elem.alpha2Code === country)[0].name\r\n                                                    : \"\"}\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                        {/* <section className=\"section\">\r\n                    <div className=\"col-6\">\r\n                        {states && !loading &&\r\n                            <div className=\"input-field\">\r\n                                <select value={country} onChange={(e) => handleStateChange(e)}>\r\n                                    <option value=\"\">Choose a State</option>\r\n                                    {states.map(element => {\r\n                                        return (\r\n                                            <option value={element.state_name}\r\n                                                key={element.state_name}\r\n                                            >{element.state_name}</option>\r\n                                        )\r\n                                    })};\r\n                        </select>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </section> */}\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div className=\"container\">\r\n\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport CountUp from 'react-countup';\r\nimport {useDispatch} from 'react-redux'\r\nimport { Chart } from 'react-charts';\r\nimport { useSelector } from 'react-redux';\r\nimport {saveCountries} from '../actions/countries';\r\n\r\n\r\nexport default function GlobalTracker() {\r\n    const data = React.useMemo(\r\n        () => [\r\n          {\r\n            label: 'Global Numbers',\r\n            data: [[0, 1], [1, 2], [2, 4], [3, 2], [4, 7]]\r\n          }\r\n        ],\r\n        []\r\n      )\r\n\r\n      const series = React.useMemo(\r\n        () => ({\r\n          showPoints: false\r\n        }),\r\n        []\r\n      )\r\n\r\n      const axes = React.useMemo(\r\n        () => [\r\n          { primary: true, type: 'linear', position: 'bottom' },\r\n          { type: 'linear', position: 'left' }\r\n        ],\r\n        []\r\n      )\r\n    const dispatch = useDispatch();\r\n    const allCountries = useSelector(state => state.countries);\r\n    const [totalCases, setTotalCases] = useState(0);\r\n    const [totalRecovered, setTotalRecovered] = useState(0);\r\n    const [totalDeaths, setTotalDeaths] = useState(0);\r\n    const [totalNewCasesToday, setTotalNewCasesToday] = useState(0);\r\n    const [totalActiveCases, setTotalActiveCases] = useState(0);\r\n    const [newDeathsToday, setNewDeathsToday] = useState(0);\r\n    const [loading, setLoader] = useState(false);\r\n    const [topCases, setTopCases] = useState([]);\r\n\r\n    const sort = (array) => {\r\n        return array.sort(function (a, b) { return a.totalCases - b.totalCases }).splice(array.length - 5, 5).reverse();\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoader(true)\r\n        axios.get('https://restcountries.eu/rest/v2/all')\r\n            .then((data) => {\r\n                dispatch(saveCountries(data.data))\r\n                setLoader(false);\r\n            })\r\n            .catch(error => console.log(error));\r\n        axios.get('https://api.thevirustracker.com/free-api?global=stats')\r\n            .then(data => {\r\n                data = data.data\r\n                setTotalCases(data.results[0].total_cases);\r\n                setTotalRecovered(data.results[0].total_recovered);\r\n                setTotalDeaths(data.results[0].total_deaths);\r\n                setTotalNewCasesToday(data.results[0].total_new_cases_today);\r\n                setTotalActiveCases(data.results[0].total_active_cases);\r\n                setNewDeathsToday(data.results[0].total_new_deaths_today);\r\n                setLoader(false);\r\n            })\r\n            .catch(error => console.log(error))\r\n\r\n        axios.get('https://api.covid19api.com/summary')\r\n            .then(res => {\r\n                const data = res.data.Countries.map(res => {\r\n                    return {\r\n                        countryCode: res.CountryCode,\r\n                        totalCases: res.TotalConfirmed,\r\n                        countryName: res.Country\r\n                    }\r\n                });\r\n                setTopCases(sort(data))\r\n            })\r\n    }, [])\r\n    return (\r\n        <div className=\"container\">\r\n            {\r\n                loading && <div className=\"progress\">\r\n                    <div className=\"indeterminate\"></div>\r\n                </div>\r\n            }\r\n            <section className=\"section\">\r\n                <div className=\"col-12\" style={{ textAlign: 'center' }}>\r\n                    <h1>Global Numbers</h1>\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    {\r\n                        !loading &&\r\n                        <section className=\"section\">\r\n                            <div className=\"col-4\">\r\n                                <div className=\"card-panel\">\r\n                                    <div className=\"card-header\" style = {{background: 'var(--primary-dark)', color: '#fff'}}>Total Cases</div>\r\n                                    <div className=\"cases\">\r\n                                        <CountUp end={totalCases} duration={1} separator=\",\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <div className=\"card-panel\">\r\n                                    <div className=\"card-header\" style = {{background: '#66bb6a', color: '#fff'}}>Total Recovered</div>\r\n                                    <div className=\"cases\">\r\n                                        <CountUp end={totalRecovered} duration={1} separator=\",\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <div className=\"card-panel\">\r\n                                    <div className=\"card-header\" style = {{background: '#f44336', color: '#fff'}}>Total Deaths</div>\r\n                                    <div className=\"cases\">\r\n                                        <CountUp end={totalDeaths} duration={1} separator=\",\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <div className=\"card-panel\">\r\n                                    <div className=\"card-header\">Total Cases Today</div>\r\n                                    <div className=\"cases\">\r\n                                        <CountUp end={totalNewCasesToday} duration={1} separator=\",\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <div className=\"card-panel\">\r\n                                    <div className=\"card-header\">Total Active Cases</div>\r\n                                    <div className=\"cases\">\r\n                                        <CountUp end={totalActiveCases} duration={1} separator=\",\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <div className=\"card-panel\">\r\n                                    <div className=\"card-header\">New Deaths Today</div>\r\n                                    <div className=\"cases\">\r\n                                        <CountUp end={newDeathsToday} duration={1} separator=\",\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                    }\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    {topCases && topCases.length > 0 &&\r\n                        <section className=\"section\">\r\n                            <div className=\"col-12\" style={{ padding: '0 10px' }}>\r\n                                <div className=\"card-panel\">\r\n                                    <div className=\"collection\">\r\n                                        <div className=\"collection-item card-header\" style={{ background: 'red', color: '#fff' }}>TOP CASES</div>\r\n                                        {\r\n                                            topCases.map((elem, index) => (\r\n                                                <a className=\"collection-item avatar\" key={elem.countryCode}\r\n                                                    style={{ color: '#000' }}>\r\n                                                        {\r\n                                                            allCountries && allCountries.length>0 &&\r\n                                                            <img src={allCountries.filter(item=>item.alpha2Code === elem.countryCode)[0].flag} alt=\"\" className=\"circle\" />\r\n                                                            }\r\n                                                        {elem.countryName}\r\n                                                    <span className=\"badge\" style={{ color: index === 0 ? 'red' : '#000', fontWeight: 'bold' }}>\r\n                                                        <CountUp end={elem.totalCases} duration={1} separator=\",\" />\r\n                                                    </span>\r\n                                                    </a>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                    }\r\n                </div>\r\n            </section>\r\n            {/* <div\r\n      style={{\r\n        width: '100%',\r\n        height: '500px',\r\n        marginLeft: 'auto'\r\n      }}\r\n    >\r\n      <Chart data={data} series={series} axes={axes} tooltip/>\r\n    </div> */}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport covid19_logo from './assets/covid19_logo.png';\nimport './App.css';\nimport Header from './core/Header';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport CountryTracker from './components/CountryTracker';\nimport GlobalTracker from './components/GlobalTracker';\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <Header />\n        <div style = {{display: 'flex', justifyContent: 'center', alignItems: 'center', paddingTop: '20px'}}>\n        <img src = {covid19_logo} alt = \"covid logo\" style = {{width: '350px'}} />\n        </div>\n        <Switch>\n          <Route exact path=\"/\" component={GlobalTracker} />\n          <Route path=\"/countrytracker\" component={CountryTracker} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from 'redux';\r\nimport {countriesReducer} from './countries';\r\n\r\nexport const allReducers = combineReducers({\r\n    countries: countriesReducer\r\n})","export const countriesReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'SET_COUNTRIES':\r\n            state = action.payload.data;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport {allReducers} from './reducers';\n\nconst store = createStore(allReducers)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}